<sec_map><section><chunk>Trimming a consistent OWL knowledge base, relying on linguistic evidence Julien Corman IRIT - Toulouse julien.corman@irit.fr Nathalie Aussenac-Gilles IRIT, CNRS - Toulouse aussenac@irit.fr Laure Vieu IRIT, CNRS - Toulouse LOA - Trento vieu@irit.fr Abstract Intuitively absurd but logically consistent sets of statements are common in publicly available OWL datasets. This article proposes an original and fully automated method to point at erroneous axioms in a consistent OWL knowledge base, by weakening it in order to improve its compliance with linguistic evidence gathered from natural language texts. A score for evaluating the compliance of subbases of the input knowledge base is proposed, as well as a trimming algorithm to discard po- tentially erroneous axioms. The whole approach is evaluated on two real datasets, with automatically retrieved web pages as a linguistic input. Introduction As they grow in size, knowledge bases (KBs) tend to contain statements which may make sense individu- ally but, when taken together, violate common sense intuitions. As an illustration, consider the following set of Description Logics (DL) formulas, issued from DBpedia (Mendes et al., 2012) : Ex 1. = { (1) owningCompany(Smithsonian Networks, Smithsonian Institution), (2) doctoralAdvisor(Thaddeus S.C. Lowe, Smithsonian Institution), (3) doctoralAdvisor(Nick Katz, Bernard Dwork), (4) doctoralAdvisor.Person, (5) owningCompany.Company } From (1), (2), (4) and (5), the individual Smithsonian Institution must be an instance of both Company and Person, which may seem counterintuitive, and indeed does not correspond to the overall under- standing of these two concepts within DBpedia. This kind of issue is common among OWL datasets, which should not be a surprise. The most conventional way of spotting this kind of errors in OWL is by checking consistency or coherence 1 of the input KB, but negation (or cardinality restriction) is underused in practice. As an illustration, according to the LODstats survey tool (Auer et al., 2012), which provides statistics about a sample of the Linked Open Data (LOD) cloud, the two most standard OWL constructs expressing negation, namely owl:disjointWith and owl:complementOf, have been observed 333 times and twice respectively, against more that 89 000 occurrences for owl:subClassOf. Let us assume that is part of a larger KB K, for instance a subset of DBpedia extracted for a specific application, or a set of OWL statements aggregated from multiple sources. Assume also that there are several other instances of Person and Company according to K and, to keep the example simple, that Smithsonian Institution, Bernard Dwork, doctoralAdvisor, and owningCompany do not appear in K \. If most instances of Person and Company according to K are respectively human beings and companies, one can expect the term the Smithsonian Institution to appear with linguistic contexts which tend to characterize terms denoting other instances of Company according to K (e.g. 1 in the DL sense, i.e. the satisfiability of all atomic concepts the context X was established), but not other instances of Person (like X was born in). Similarly, Bernard Dwork should appear with contexts which are characteristic of terms denoting other instances of Person according to K. In other words, by checking the overall compliance of K with some lin- guistic input, it should be possible to identify some undesirable (Person(Smithsonian Institution)) and desirable (Company(Smithsonian Institution), Person(Bernard Dwork)) consequences of it. The next problem consists in determining how K can be weakened in order to discard the former, but keep the latter. Even if one focuses here (for readability) on weakening only, there are several options available. The view adopted here, which is also the most common in the knowledge base debugging literature, is that some axiom(s) of should be discarded, but none of them unnecessarily. Then the only solution in this example consists in discarding (2). The article investigates the applicability of such a trimming mechanism to moderately large input KBs (up to a few thousand statements), using automatically gathered web pages or snippets as linguistic input. To our knowledge, this is the first attempt to use linguistic evidence in order to automatically weaken an existing KB instead of extending it. Section 1 reviews existing works in two closely related fields, KB extraction from texts and KB debugging, whereas section 2 introduces some conventions. Section 3 defines a score which evaluates the compliance with the linguistic data of any subbase of the input KB. Section 4 proposes an algorithm to trim the input KB based on this score. Section 5 evaluates the approach with two datasets. </chunk></section><section><heading>1 State of the art </heading><chunk>Knowledge base extraction from texts, or ontology learning (Cimiano, 2006; Buitelaar et al., 2005) aims at automatically building or enriching a knowledge base out of linguistic evidence. The work presented here borrows from a subtask named ontology population (which itself borrows from named entity clas- sification), but only when the individuals and concepts of interest are known in advance (Cimiano and V  olker, 2005; Tanev and Magnini, 2008; Giuliano and Gliozzo, 2008), which is a non-standard case, whereas ontology population generally considers retrieving new individuals likely to instantiate a given set of concepts. The objective differs also fundamentally from the one pursued in knowledge base ex- traction, in that the desired output of the process is a weaker KB from which potentially faulty statements have been discarded, not a stronger one. In that sense, this work pertains to knowledge base debugging, for which different tools or algorithms have been devised in the recent years, performing for instance a series of syntactic verifications (Poveda-Villal  on et al., 2012), or submitting models (Ferr  e and Rudolph, 2012; Benevides et al., 2010) or consequences (Pammer, 2010) of the input KB to the user. In a more automated fashion, diagnosis for Description Logics (Ribeiro and Wassermann, 2009; Schlobach, 2005; Friedrich and Shchekotykhin, 2005; Kalyanpur et al., 2006; Qi et al., 2008) deals with automated weakening of an input KB. An important difference though between this work and approaches based on diagnosis is that the latter assume that the input KB is inconsistent (or incoherent in the DL sense), or at least that some undesired consequences of K have been previously identified. Another drawback of KB diagnosis without an external source of knowledge (like the linguistic input used here) is the sheer number of candidate subbases, as experienced by (Schlobach, 2005). </chunk></section><section><heading>2 Conventions </heading><chunk>The reader is assumed familiar with the syntax and standard model-theoretic semantic of Description Logics (Baader, 2003). A knowledge base (KB) is just a finite set of DL formulas. Following the usage in the DL community, the term axiom designates a formula , whereas a consequence is a formula verified by all models of . A KB is said consistent iff it admits a model. A DL atomic concept designates a unary predicate without logical connective or quantifier, like Company or Person, as opposed to a complex concept, like doctoralAdvisor.Person. A DL role is a binary predicate. The method introduced here can in theory be applied to any KB in a DL with available reasoning facilities, in particular the DLs underlying the OWL DL and OWL 2 recommendations, but it is arguably better-suited for KBs in less expressive DLs, which also constitute the vast majority of the data available on the LOD cloud. Another requirement is the presence of linguistic terms denoting named individuals of the input KB, prototypically given by their OWL labels. </chunk></section><section><chunk>3 Compliance of a set of statements with a linguistic input  This section defines a score which reflects the compliance of a set of statements with a linguistic corpus, and will be used in the next section to identify potentially faulty axioms in an input KB K. More precisely, what this score evaluates is the compliance with the linguistic input of the set () of all consequences of of the form A(e) or A(e), where A and e are respectively a DL atomic concept and a DL individual, and such that there is at least one (other) instance e of A according to . For an atomic DL concept A, let A () () denote the consequences of of the form A(e). Roughly speaking, for each = A(e) or = A(e) in (), the method exploits linguistic contexts which, according to , are characteristic of instances of A, based on A () \ {e}, yielding a score sc () for . This score reflects how much the linguistic behavior of e resembles or deviates from the linguistic behavior of (other) instances of A. For instance, in example 1, let = Person(Smithsonian Institution), and assume that is part of a larger (consistent) KB K. Then Person (K) (K), and the score sc K () of is determined by the linguistic contexts shared by the individual Smithsonian Institution and other instances of Person according to K. A first important observation is that no assumption is made regarding the veracity of a consequence like = Person(Smithsonian Institution). This would require some external knowledge about reality, which is beyond the scope of this work. The only source of knowledge is the input KB itself, paired with the linguistic input. For instance, the concept Person in K may encompass juridical persons, in which case one should expect the score sc K () to be high. Another remark is that the linguistic term person does not play any function here. The label of the atomic concept Person could actually be B 27, with no incidence on sc K (). This contrasts with a relatively widespread approach in the knowledge base extraction literature, which consists in looking for (possibly learned) cooccurrence patterns (Hearst, 1992) between terms denoting instances and classes. For instance, if X denotes an individual and Y a concept, then the linguistic patterns X is a Y or X and other Y s tend to indicate that X is indeed an instance of Y . There are at least two reasons to prefer similarity of contexts to cooccurrences patterns for the precise task addressed here. First, when the instances and classes of interest are known in advance (which is the case here, but usually not for knowledge base extraction), similarity of contexts has been empirically shown to outperform cooccurrence patterns (Tanev and Magnini, 2008). This may be explained by the fact that retrieving a sufficient number of cooccurrences of a given pair of terms (e.g. Thaddeus S.C. Lowe and person) is not always possible, whereas retrieving simple occurrences of a term (e.g. Thaddeus S.C. Lowe) is obviously easier. Cooccurrences can also be harder to retrieve for more abstract concepts. For instance, Virgin Holydays is [. . . ] company, or Virgin Holydays and other companies both sound plausible, but Virgin Holydays is [. . . ] organization or Virgin Holydays and other organizations is less likely to be found. The second reason is that terms denoting classes (prototypically common nouns) are arguably more ambiguous than terms denoting individuals (prototypically named entities). This does not completely solve the ambiguity issue though, in particular for homonyms (for instance, the term JKF may designate either a politician or an airport), and additional precautions may be taken for these, like the ones described in section 5. Here is now a concrete proposition for the computation of sc (), given a consistent KB and a consequence (). The corpus is constituted of either web pages or snippets retrieved with a search engine, using as queries named entities which denote individuals appearing in , generally given as OWL labels. A linguistic context in this setting is just an n-gram (2 n 5) immediately following or preceding a term of interest, and without punctuation mark. Borrowing from (Giuliano and Gliozzo, 2008), the observed frequencies of an n-gram s are adjusted based on the self information self(s), given by self(s) = log p(s), the probability p(s) being estimated with the Google Web 1T 5-gram corpus 23 (this intuitively penalizes n-grams with a high Google n-gram frequency). Let Cont be the set of all contexts observed with individuals of , and, if y is an individual, let y R |Cont| denote the vector of frequencies of contexts observed with y. The confidence score sc () is given either by : Definition 3.1. sc (A(e)) = p( |= A(x) | x = e) Definition 3.2. sc (A(e)) = 1 p( |= A(x) | x = e) Intuitively, p( |= A(x) | x = e) denotes the probability, for a random individual x with the same context frequency vector as e, that |= A(x). Applying Bayes rule, it is equivalent to : p(x = e | |= A(x)) p( |= A(x)) p(x = e) Let inst(, C) denote the instances of concept C according to , and y the cumulated values of vector y. Then p( |= A(x)) can be estimated by xinst(,A) x x inst(,) x . Estimating p(x = e | |= A(x)) is slightly more complex. Let cos(y, y ) designate the cosine similarity between vectors y and y . If X y y is a random variable for cos(y, y ), then p(X y y cos(y, y )) indicates how unexpectedly similar the observed linguistic behaviors of individuals y and y are. Then p(x = e | |= A(x)) can be estimated by e inst(,A)\{e} p(X e e cos(e,e )) | inst(,A)\{e}| . And similarly, p(x = e) can be estimated by e inst(,)\{e} p(X e e cos(e,e )) | inst(,)\{e}| . For the experiments described in section 5, p(X e e cos(e, e )) was computed by assuming a normal distribution of X e e , whose parameters were estimated by maximum likelihood out of all pairwise cosine distances between individuals appearing in (). The linguistic compliance score sc() for a set of DL statements can then be defined as the mean of the scores of all () : Definition 3.3. sc() = () sc () |()| 4 Trimming a KB using linguistic compliance This section shows how the compliance score which has just been defined can be used to refine an input KB K, in order to rule out potentially faulty axioms. Ideally, one would like to identify the subbases of K which are maximal wrt to set inclusion among the ones having a maximal compliance score. But in practice, even if this does not affect the worst-case complexity of the whole trimming process (dominated by the computation of (K)), the size of the search space (2 K ) makes the identification of the optimal subbase(s) of K hardly feasible for realistically sized datasets. This is why the heuristic described by algorithm 1 was used for the experiments of section 5. Intuitively, it consists in incrementally discarding the axiom which penalizes the most the linguistic compliance of the current base , initialized with K. In other words, the selected axiom is the one which, if discarded, yields the immediate subbase with maximal compliance score. The output is a list containing successively discarded axioms, the first discarded ones being considered as the least reliable. The number n of axioms to discard is chosen as a parameter. Two limit cases are ignored for the sake of readability. First, it is assumed that |argmax sc( \ {})| = 1, i.e. that there is a single least reliable 2 https://catalog.ldc.upenn.edu/LDC2006T13 3 Thanks to the linguistic department of the Erlangen-N  uremberg University for allowing us to query this corpus. axiom at each iteration, which is usually the case if n is relatively small. Otherwise, the procedure can be adapted in a straightforward manner to return a set of lists of axioms, instead of a single list. The other (unlikely) limit case occurs when max sc( \ {}) sc(), i.e. when no immediate subbase of has a better compliance score than . If this happens, the procedure should simply be interrupted, returning only the axioms discarded thus far. Algorithm 1 Trimming heuristic 1: OutputList EmptyList ; 2: K ; 3: while || &gt; |K| n do 4: Ax argmax sc( \ {}) ; 5: append(OutputList, Ax) ; 6: \ {} ; 7: end while This procedure is only a heuristic, in that there is no guarantee that the complement in K of the n discarded axioms has an optimal compliance score among subbases of K (not even among subbases of K with cardinality |K| n). An alternative approach was also experimented, which captures a slightly different intuition, namely that the loss of consequences of () with low scores should be prioritized when selecting the axiom Ax to discard, line 4. Let f () R be the ordered list of all sc () for ( \ {}). Then if l is the standard lexicographic order over R , the axiom is discarded iff \ {} : f () l f ( ). </chunk></section><section><heading>5 Evaluation </heading><chunk>Both approaches were evaluated with 2 consistent datasets, using a distinct evaluation protocol for each dataset. The first dataset is an automatically retrieved subset of DBpedia, thematically focused on tourism. It counts 5721 logical axioms, and 1095 DL named individuals, with relatively simple for- mulas (the least expressive underlying DL is AL (D) ). This is an example of a lightweight KB, with a large predominance of ABox axioms (5336 over 5721). Additionally, it is a fragment of a large dataset (DBpedia) mainly built out of semi-structured data (Wikipedia infoboxes), but also partly issued from a collaborative effort (the DBpedia ontology), and therefore it is likely to contain nonsensical sets of statements. The procedure applied to obtain this KB is described in (Corman et al., 2015). In partic- ular, individuals with potential homonyms (like JFK) have been discarded based on the existence of a Wikipedia disambiguation page, of other named individuals sharing their label in DBpedia, or simply if the number of matched web pages for (one of) the label(s) of the individual was too high. The corpus for this dataset was composed of approximately 60000 web pages retrieved with a search engine, using named individual labels as queries. The evaluation consisted in manually verifying whether a discarded axiom was actually erroneous, i.e. whether the understanding of some element of the signature of (named individual, atomic concept or role) was incompatible with its overall understanding within K. The results of this first evaluation are presented in table 1. Columns 5, 10 and 20 give the number (val.) and proportion (prec., for precision) of axioms manually identified as actually er- roneous among the 5, 10 and 20 first discarded ones. Column Ordering specifies the method ap- plied to select the discarded axiom at each iteration of the loop in algorithm 1 : sc( \ {}) if = argmax sc( \ {}), and l if is obtained with the alternative approach (the lexicographic order) presented in section 4. The values obtained are encouraging, in that one can reasonably expect the proportion of erroneous within the whole KB to be much lower than the precision scores obtained here. A more thorough examination of the linguistic contexts responsible for these good results is still required though. Ordering 5 10 20 val. prec. val. prec. val. prec. sc( \ {}) 3 0.6 3 0.3 9 0.45 l 2 0.4 4 0.4 8 0.4 Table 1: Actually erroneous axioms among the first 5, 10 and 20 discarded ones for the DBpedia subset Ordering 5 10 20 val. prec. val. prec. val. prec./rec. sc( \ {}) 5 1 6 0.6 9 0.45 l 3 0.6 7 0.7 11 0.55 Table 2: Random axioms among the first 5, 10 and 20 discarded ones for the fragment of the fisheries ontology The second dataset is a small randomly extracted fragment of the fisheries KB built for the NEON project, 4 which contains 169 logical axioms, involving only 20 named individuals (mostly geographical or administrative entities), with a more complex TBox (the least expressive underlying DL is SI). This KB is arguably more reliable too, which allowed the experimentation of a more objective form of eval- uation. It consists in artificially extending K with randomly generated axioms, before trying to discard them by application of the trimming algorithm. The assumption is that a randomly generated axiom is usually less reliable than a manually crafted one. The axiom generation procedure randomly selects an axiom K, and yields an axiom with the same syntactic structure, but in which all individuals, atomic concepts and roles have been randomly replaced by individuals, atomic concepts and roles ap- pearing in K. For instance, if = A r.B, then = C s.D, with C and D (resp. s) randomly chosen among atomic concepts (resp. roles) of the signature of K. Additionally, if ( 1 , .., n ) designate the random axioms successively added to K, it was required for each i that K { 1 , .., i } was consistent, and that there was at least one consequence of the form A(e) or A(e) entailed by K { 1 , .., i } but not by K { 1 , .., i1 }, and such that e shares at least one n-gram with some other named individual of the signature of K. 20 axioms in total were added to K. The corpus consisted of approximately 4500 web pages, retrieved in the same way as for the first dataset. Results are presented in table 2. This time, the values are the number and proportion of randomly generated axioms among the first 5, 10 and 20 discarded ones. Because the numbers of generated and trimmed axioms are identical (20), column prec./rec. estimates both precision and recall. Precision was high for the first discarded axioms when sc( \ {}) was used to order immediate subbases of . But in both cases, the number of randomly generated axioms among the 20 first discarded ones was not significant. Conclusion This article proposes an original approach to identify potentially faulty axioms within a (lightweight) OWL knowledge base, trimming it in order to improve its compliance with some automatically gathered linguistic evidence. A score is defined to evaluate the compliance with the linguistic data of subbases of the input KB, exploiting contexts shared by individuals which, according to a subbase, are instances of the same atomic DL concept. An incremental trimming strategy based on this score is then proposed and evaluated. 4 http://www.neon-project.org/nw/Ontologies References Auer, S., J. Demter, M. Martin, and J. Lehmann (2012). LODStatsan extensible framework for high- performance dataset analytics. In Knowledge Engineering and Knowledge Management. Springer. Baader, F. (2003). The description logic handbook: theory, implementation, and applications. Cam- bridge university press. Benevides, A., G. Guizzardi, B. Braga, and J. Almeida (2010). Validating modal aspects of OntoUML conceptual models using automatically generated visual world structures. Journal of Universal Com- puter Science 16(20). Buitelaar, P., P. Cimiano, and B. Magnini (2005). Ontology Learning from Text: Methods, Evaluation And Applications. IOS Press. Cimiano, P. (2006). Ontology learning and population from text: algorithms, evaluation and applica- tions. Springer. Cimiano, P. and J. V  olker (2005). Towards large-scale, open-domain and ontology-based named entity classification. In RANLP proceedings. Corman, J., L. Vieu, and N. Aussenac-Gilles (2015). Ontological Analysis For Description Logics Knowledge Base Debugging. In CommonSense proceedings. Ferr  e, S. and S. Rudolph (2012). Advocatus DiaboliExploratory Enrichment of Ontologies with Nega- tive Constraints. EKAW proceedings. Friedrich, G. and K. Shchekotykhin (2005). A general diagnosis method for ontologies. In ISWC pro- ceedings. Giuliano, C. and A. Gliozzo (2008). Instance-based ontology population exploiting named-entity substi- tution. In COLING proceedings. Hearst, M. A. (1992). Automatic acquisition of hyponyms from large text corpora. In COLING proceed- ings. Kalyanpur, A., B. Parsia, E. Sirin, and B. Cuenca-Grau (2006). Repairing unsatisfiable concepts in OWL ontologies. In ESWC proceedings. Mendes, P. N., M. Jakob, and C. Bizer (2012). DBpedia: A Multilingual Cross-domain Knowledge Base. In LREC proceedings. Pammer, V. (2010). Automatic Support for Ontology Evaluation. Ph. D. thesis, Graz University of Technology. Poveda-Villal  on, M., M. C. Su  arez-Figueroa, and A. G  omez-P  erez (2012). Did you validate your ontol- ogy? OOPS! In ESWC proceedings. Qi, G., P. Haase, Z. Huang, Q. Ji, J. Z. Pan, and J. V  olker (2008). A kernel revision operator for terminologies - algorithms and evaluation. In ISWC proceedings. Ribeiro, M. M. and R. Wassermann (2009). Base revision for ontology debugging. Journal of Logic and Computation 19(5). Schlobach, S. (2005). Diagnosing terminologies. In AAAI proceedings. Tanev, H. and B. Magnini (2008). Weakly supervised approaches for ontology population. In conference on Ontology Learning and Population proceedings. </chunk></section></sec_map>